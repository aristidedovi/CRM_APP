name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:

  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: crm_test
          POSTGRES_PASSWORD: aristide
          POSTGRES_USER: aristide
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
          node-version: 14

    - name: Install Node.js Dependencies
      run: cd front-React && npm install
      
    - name: Build React Application
      run: cd front-React && CI=false npm run build
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: 3.x

    - name: Install Python Dependencies
      run: cd backend-Flask && pip install -r requirements.txt
    
    - name: Load initial data
        run: psql -h localhost -U aristide -d crm_test -f ./crm.sql
      
    - name: Run Flask Unit Tests
      run: cd backend-Flask && python3 test_flaskr.py


    - name: Build with docker-compose
      run: docker-compose up -d 

